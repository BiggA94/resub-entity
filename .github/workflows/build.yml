# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v1
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    # Runs a single command using the runners shell
    - name: Install dependencies
      uses: Borales/actions-yarn@v2.1.0
      if: steps.yarn-cache.outputs.cache-hit != 'true'
      with:
        cmd: install

    - name: Test
      uses: Borales/actions-yarn@v2.1.0
      with:
        cmd: test --ci

    - name: Lint
      uses: Borales/actions-yarn@v2.1.0
      with:
        cmd: lint
        
    - name: Build
      uses: Borales/actions-yarn@v2.1.0
      with:
        cmd: build
        
    - name: Upload buildartifacts 
      uses: actions/upload-artifact@v2
      with:
        name: resub-entity
        path: dist/
